# Generated by Django 5.1.7 on 2025-03-18 01:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=50, verbose_name='표시 이름')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='프로필 이미지')),
                ('bio', models.TextField(blank=True, verbose_name='자기소개')),
                ('plan', models.CharField(choices=[('free', '무료 요금제'), ('pro', '프로 요금제'), ('team', '팀 요금제'), ('enterprise', '기업 요금제')], default='free', max_length=20, verbose_name='요금제')),
                ('plan_start_date', models.DateTimeField(blank=True, null=True, verbose_name='요금제 시작일')),
                ('plan_end_date', models.DateTimeField(blank=True, null=True, verbose_name='요금제 종료일')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='이메일 인증 여부')),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now, verbose_name='마지막 활동')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='이메일 알림')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자 목록',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='전화번호')),
                ('organization', models.CharField(blank=True, max_length=100, verbose_name='조직')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='직책')),
                ('theme_preference', models.CharField(choices=[('light', '라이트'), ('dark', '다크'), ('system', '시스템 설정')], default='system', max_length=20, verbose_name='테마 설정')),
                ('language_preference', models.CharField(choices=[('ko', '한국어'), ('en', '영어'), ('ja', '일본어'), ('zh', '중국어'), ('fr', '프랑스어'), ('pt', '포르투갈어')], default='ko', max_length=10, verbose_name='언어 설정')),
                ('api_key', models.CharField(blank=True, max_length=64, null=True, verbose_name='API 키')),
                ('api_usage_count', models.IntegerField(default=0, verbose_name='API 사용 횟수')),
                ('api_last_used', models.DateTimeField(blank=True, null=True, verbose_name='API 마지막 사용일')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '사용자 프로필',
                'verbose_name_plural': '사용자 프로필 목록',
            },
        ),
    ]
